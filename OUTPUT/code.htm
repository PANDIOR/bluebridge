<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OUTPUT\code.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OUTPUT\code.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Mon Apr 20 17:12:25 2020
<BR><P>
<H3>Maximum Stack Usage =        116 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; display &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2938e24]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2938e24]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[293907c]">Reset_Handler</a>
 <LI><a href="#[384572c]">NMI_Handler</a>
 <LI><a href="#[38456f0]">HardFault_Handler</a>
 <LI><a href="#[38456b4]">MemManage_Handler</a>
 <LI><a href="#[3845678]">BusFault_Handler</a>
 <LI><a href="#[384563c]">UsageFault_Handler</a>
 <LI><a href="#[3845600]">SVC_Handler</a>
 <LI><a href="#[38455c4]">DebugMon_Handler</a>
 <LI><a href="#[3845588]">PendSV_Handler</a>
 <LI><a href="#[384554c]">SysTick_Handler</a>
 <LI><a href="#[293844c]">WWDG_IRQHandler</a>
 <LI><a href="#[29388fc]">PVD_IRQHandler</a>
 <LI><a href="#[2938794]">TAMPER_IRQHandler</a>
 <LI><a href="#[2938848]">RTC_IRQHandler</a>
 <LI><a href="#[2938a28]">FLASH_IRQHandler</a>
 <LI><a href="#[29388c0]">RCC_IRQHandler</a>
 <LI><a href="#[3842e28]">EXTI0_IRQHandler</a>
 <LI><a href="#[3842db0]">EXTI1_IRQHandler</a>
 <LI><a href="#[3842d74]">EXTI2_IRQHandler</a>
 <LI><a href="#[2938adc]">EXTI3_IRQHandler</a>
 <LI><a href="#[2938aa0]">EXTI4_IRQHandler</a>
 <LI><a href="#[2938d70]">DMA1_Channel1_IRQHandler</a>
 <LI><a href="#[2938d34]">DMA1_Channel2_IRQHandler</a>
 <LI><a href="#[2938cf8]">DMA1_Channel3_IRQHandler</a>
 <LI><a href="#[2938cbc]">DMA1_Channel4_IRQHandler</a>
 <LI><a href="#[2938c80]">DMA1_Channel5_IRQHandler</a>
 <LI><a href="#[2938c44]">DMA1_Channel6_IRQHandler</a>
 <LI><a href="#[2938c08]">DMA1_Channel7_IRQHandler</a>
 <LI><a href="#[2938e24]">ADC1_2_IRQHandler</a>
 <LI><a href="#[29384c4]">USB_HP_CAN1_TX_IRQHandler</a>
 <LI><a href="#[2938488]">USB_LP_CAN1_RX0_IRQHandler</a>
 <LI><a href="#[2938de8]">CAN1_RX1_IRQHandler</a>
 <LI><a href="#[2938dac]">CAN1_SCE_IRQHandler</a>
 <LI><a href="#[3842dec]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[2938758]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[29386a4]">TIM1_UP_IRQHandler</a>
 <LI><a href="#[29386e0]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[293871c]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[38432d8]">TIM2_IRQHandler</a>
 <LI><a href="#[293862c]">TIM3_IRQHandler</a>
 <LI><a href="#[3843314]">TIM4_IRQHandler</a>
 <LI><a href="#[29389b0]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[29389ec]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[2938938]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[2938974]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[293880c]">SPI1_IRQHandler</a>
 <LI><a href="#[29387d0]">SPI2_IRQHandler</a>
 <LI><a href="#[29385b4]">USART1_IRQHandler</a>
 <LI><a href="#[2938578]">USART2_IRQHandler</a>
 <LI><a href="#[293853c]">USART3_IRQHandler</a>
 <LI><a href="#[2938b90]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[2938884]">RTCAlarm_IRQHandler</a>
 <LI><a href="#[2938500]">USBWakeUp_IRQHandler</a>
 <LI><a href="#[3846974]">main</a>
 <LI><a href="#[29390f4]">SystemInit</a>
 <LI><a href="#[3842504]">__main</a>
 <LI><a href="#[3843fbc]">fputc</a>
 <LI><a href="#[383c654]">_sputc</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3842504]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[395025c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[3950130]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[394f62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[39500f4]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[394f62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3950004]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[293907c]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938e24]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2938e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2938e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938de8]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938dac]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938d70]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938d34]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938cf8]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938cbc]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938c80]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938c44]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938c08]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938b90]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938adc]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938aa0]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938a28]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29389ec]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29389b0]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938974]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938938]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29388fc]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29388c0]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938884]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938848]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[293880c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29387d0]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938794]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938758]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[293871c]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29386e0]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29386a4]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[293862c]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29385b4]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938578]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[293853c]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938500]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29384c4]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2938488]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[293844c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2936700]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29366c4]"></a>NVIC_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38463d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[384644c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim4_init
<LI><a href="#[3846488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_init
<LI><a href="#[384653c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
</UL>

<P><STRONG><a name="[2936688]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[293664c]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[2936610]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[2932bb4]"></a>EXTI_DeInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[2932b78]"></a>EXTI_Init</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[384653c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
</UL>

<P><STRONG><a name="[2932b3c]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[2932b00]"></a>EXTI_GenerateSWInterrupt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[2932ac4]"></a>EXTI_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[2932a88]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[2932a4c]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[2932a10]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3842d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[3842db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[3842dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[3842e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[29314f8]"></a>GPIO_DeInit</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2935a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[29314bc]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2935a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[2931480]"></a>GPIO_Init</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3842978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output_Mode
<LI><a href="#[38429b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input_Mode
<LI><a href="#[3844778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[38447f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BusIn
<LI><a href="#[384482c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BusOut
<LI><a href="#[38463d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[38464c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[3846500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[384653c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[3846578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>

<P><STRONG><a name="[2931444]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2931408]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38428c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input
<LI><a href="#[3842d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[3842db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[3842dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[3842e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[29313cc]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2931390]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2931354]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2931318]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3842900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[384293c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output
</UL>

<P><STRONG><a name="[29312dc]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3842900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[384293c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output
</UL>

<P><STRONG><a name="[29312a0]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2931264]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2931228]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[29311ec]"></a>GPIO_EventOutputConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[29311b0]"></a>GPIO_EventOutputCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2931174]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2931138]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[384653c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
</UL>

<P><STRONG><a name="[29310fc]"></a>GPIO_ETH_MediaInterfaceConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[292f734]"></a>RCC_DeInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f6f8]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f6bc]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292f680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[292f680]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[292f6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[292f644]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f608]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f5cc]"></a>RCC_PLLConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f590]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f554]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f518]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f4dc]"></a>RCC_HCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f4a0]"></a>RCC_PCLK1Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f464]"></a>RCC_PCLK2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f428]"></a>RCC_ITConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f3ec]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f3b0]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f374]"></a>RCC_LSEConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f338]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f2fc]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f2c0]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[29305bc]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[292baf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[292f284]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f248]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3844778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[38463d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[38464c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[3846500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[384653c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[3846578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>

<P><STRONG><a name="[292f20c]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38463d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[384644c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim4_init
<LI><a href="#[3846488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_init
<LI><a href="#[38464c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[2935a1c]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292bb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[292d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[29314bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIODeInit
<LI><a href="#[29314f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[2934a68]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292bb34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[292d2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[29353c8]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f1d0]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f194]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f158]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f11c]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292f0e0]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[292d2e0]"></a>TIM_DeInit</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2934a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[2935a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[292d2a4]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[384644c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim4_init
<LI><a href="#[3846488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_init
<LI><a href="#[38464c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[292d268]"></a>TIM_OC1Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38464c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[292d22c]"></a>TIM_OC2Init</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292d1f0]"></a>TIM_OC3Init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292d1b4]"></a>TIM_OC4Init</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292d178]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292d088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[292d13c]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292d088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[292d100]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292d04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[292d088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[292d0c4]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292d04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[292d088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[292d088]"></a>TIM_ICInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[292d0c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[292d100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[292d13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[292d178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[292d40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[292d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[292d484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[292d4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[292d04c]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[292d0c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[292d100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[292d40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[292d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[292d010]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cfd4]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cf98]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cf5c]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cf20]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cee4]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3842db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[384644c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim4_init
<LI><a href="#[3846488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_init
<LI><a href="#[38464c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[292cea8]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292ce6c]"></a>TIM_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[384644c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim4_init
<LI><a href="#[3846488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_init
</UL>

<P><STRONG><a name="[292ce30]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cdf4]"></a>TIM_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cdb8]"></a>TIM_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cd7c]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cd40]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292ccc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[292cd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[292cd04]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[292cd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[292ccc8]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[292cd40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[292d40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[292d448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[292cc8c]"></a>TIM_ETRConfig</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292cc14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[292cc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[292cc50]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[292cc8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[292cc14]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[292cc8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[292cbd8]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cb9c]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cb60]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cb24]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292cae8]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292caac]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292ca70]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292ca34]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38464c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[292c9f8]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c9bc]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c980]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c944]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38464c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[292c908]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c8cc]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c890]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c854]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c818]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c7dc]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c7a0]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c764]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c728]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c6ec]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c6b0]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c674]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c638]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c5fc]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c5c0]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c584]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c548]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c50c]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c4d0]"></a>TIM_CCxCmd</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c494]"></a>TIM_CCxNCmd</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c458]"></a>TIM_SelectOCxM</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c41c]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c3e0]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c3a4]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c368]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c32c]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c2f0]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c2b4]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c278]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c23c]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c200]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c1c4]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c188]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c14c]"></a>TIM_SetCompare4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c110]"></a>TIM_SetClockDivision</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c0d4]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c098]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c05c]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292c020]"></a>TIM_GetCapture4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292bfe4]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292bfa8]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292bf6c]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292bf30]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[292bef4]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[38432d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[3843314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[292beb8]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38432d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[3843314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[292bb34]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2934a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[2935a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[292baf8]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[29305bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[38463d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[292babc]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292ba80]"></a>USART_ClockInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292ba44]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292ba08]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38463d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[292b9cc]"></a>USART_ITConfig</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[38463d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[292b990]"></a>USART_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b954]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b918]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b8dc]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b8a0]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b864]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b828]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3843fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[292b7ec]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b7b0]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b774]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b738]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b6fc]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b6c0]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b684]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b648]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b60c]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b5d0]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b594]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b558]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3843fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[292b51c]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b4e0]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[292b4a4]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[38469ec]"></a>display</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = display &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[383c384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[3842180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[3846884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38469b0]"></a>Delay_Ms</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3846974]"></a>main</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = main &rArr; display &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[2936700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[38463d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[3846410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u32_read
<LI><a href="#[384644c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim4_init
<LI><a href="#[3846488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_init
<LI><a href="#[38464c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[3846500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[384653c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[3846578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[38467d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM3210B_LCD_Init
<LI><a href="#[384680c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[3846848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[38468c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[38469b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Ms
<LI><a href="#[38469ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[3846938]"></a>delay_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3842630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u32_write
<LI><a href="#[3842db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[3846410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u32_read
</UL>

<P><STRONG><a name="[38468fc]"></a>display_second</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = display_second &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[383c384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[3842180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[3846884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3842d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[3842db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>

<P><STRONG><a name="[384572c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[38456f0]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[38456b4]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3845678]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[384563c]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3845600]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[38455c4]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3845588]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[384554c]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29390f4]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[38451c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[3844f70]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, system_stm32f10x.o(.text), UNUSED)

<P><STRONG><a name="[384491c]"></a>Delay_LCD</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38443f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
<LI><a href="#[3844868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REG_932X_Init
<LI><a href="#[38448a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REG_8230_Init
</UL>

<P><STRONG><a name="[38448e0]"></a>LCD_WriteReg</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[384437c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOff
<LI><a href="#[38443b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOn
<LI><a href="#[38443f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PowerOn
<LI><a href="#[384446c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP
<LI><a href="#[3844598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowModeDisable
<LI><a href="#[38445d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[384473c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[3844868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REG_932X_Init
<LI><a href="#[38448a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REG_8230_Init
</UL>

<P><STRONG><a name="[38448a4]"></a>REG_8230_Init</STRONG> (Thumb, 288 bytes, Stack size 4 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = REG_8230_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38448e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[384491c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[38467d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM3210B_LCD_Init
</UL>

<P><STRONG><a name="[3844868]"></a>REG_932X_Init</STRONG> (Thumb, 514 bytes, Stack size 4 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = REG_932X_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38448e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[384491c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[38467d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM3210B_LCD_Init
</UL>

<P><STRONG><a name="[384482c]"></a>LCD_BusOut</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_BusOut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2931480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3844430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRAM
<LI><a href="#[3844778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[38447b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadReg
</UL>

<P><STRONG><a name="[38447f0]"></a>LCD_BusIn</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_BusIn &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2931480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3844430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRAM
<LI><a href="#[38447b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadReg
</UL>

<P><STRONG><a name="[38447b4]"></a>LCD_ReadReg</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_ReadReg &rArr; LCD_BusIn &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38447f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BusIn
<LI><a href="#[384482c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BusOut
</UL>
<BR>[Called By]<UL><LI><a href="#[38467d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM3210B_LCD_Init
</UL>

<P><STRONG><a name="[3844778]"></a>LCD_CtrlLinesConfig</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_CtrlLinesConfig &rArr; LCD_BusOut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2931480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[384482c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BusOut
</UL>
<BR>[Called By]<UL><LI><a href="#[38467d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM3210B_LCD_Init
</UL>

<P><STRONG><a name="[38467d0]"></a>STM3210B_LCD_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = STM3210B_LCD_Init &rArr; LCD_ReadReg &rArr; LCD_BusIn &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3844778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[38447b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadReg
<LI><a href="#[3844868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REG_932X_Init
<LI><a href="#[38448a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REG_8230_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[384680c]"></a>LCD_SetTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3846848]"></a>LCD_SetBackColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[384473c]"></a>LCD_SetCursor</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[38448e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3844340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPicture
<LI><a href="#[38444a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawMonoPict
<LI><a href="#[38444e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[384455c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[38445d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[3844688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
<LI><a href="#[38468c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[3844700]"></a>LCD_WriteRAM</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3844340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPicture
<LI><a href="#[384446c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP
<LI><a href="#[38444a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawMonoPict
<LI><a href="#[38444e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[384455c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[3844688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
<LI><a href="#[38468c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[38446c4]"></a>LCD_WriteRAM_Prepare</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3844340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPicture
<LI><a href="#[384446c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteBMP
<LI><a href="#[38444a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawMonoPict
<LI><a href="#[38444e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[384455c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[3844688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
<LI><a href="#[38468c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[3844688]"></a>LCD_DrawChar</STRONG> (Thumb, 110 bytes, Stack size 28 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_DrawChar &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[38446c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[3844700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[384473c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[384464c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>

<P><STRONG><a name="[384464c]"></a>LCD_DisplayChar</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[3844688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3846884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>

<P><STRONG><a name="[3846884]"></a>LCD_DisplayStringLine</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[384464c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3844610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearLine
<LI><a href="#[38468fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_second
<LI><a href="#[38469ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
</UL>

<P><STRONG><a name="[3844610]"></a>LCD_ClearLine</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3846884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>

<P><STRONG><a name="[38468c0]"></a>LCD_Clear</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_Clear &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[38446c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[3844700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[384473c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38445d4]"></a>LCD_SetDisplayWindow</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[384473c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[38448e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3844598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowModeDisable
</UL>

<P><STRONG><a name="[3844598]"></a>LCD_WindowModeDisable</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38445d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[38448e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>

<P><STRONG><a name="[384455c]"></a>LCD_DrawLine</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38446c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[3844700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[384473c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[3844520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>

<P><STRONG><a name="[3844520]"></a>LCD_DrawRect</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[384455c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[38444e4]"></a>LCD_DrawCircle</STRONG> (Thumb, 348 bytes, Stack size 28 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38446c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[3844700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[384473c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>

<P><STRONG><a name="[38444a8]"></a>LCD_DrawMonoPict</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38446c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[3844700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[384473c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>

<P><STRONG><a name="[384446c]"></a>LCD_WriteBMP</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38446c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[3844700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[38448e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>

<P><STRONG><a name="[3844430]"></a>LCD_ReadRAM</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38447f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BusIn
<LI><a href="#[384482c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BusOut
</UL>

<P><STRONG><a name="[38443f4]"></a>LCD_PowerOn</STRONG> (Thumb, 118 bytes, Stack size 4 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38448e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[384491c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_LCD
</UL>

<P><STRONG><a name="[38443b8]"></a>LCD_DisplayOn</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38448e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>

<P><STRONG><a name="[384437c]"></a>LCD_DisplayOff</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38448e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>

<P><STRONG><a name="[3844340]"></a>LCD_DrawPicture</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38446c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[3844700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
<LI><a href="#[384473c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>

<P><STRONG><a name="[38463d4]"></a>uart_init</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = uart_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[292b9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[292ba08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[292baf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[292f20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[292f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2931480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[29366c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3843fbc]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[292b558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[292b828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf6.o(i.__0printf$6)
</UL>
<P><STRONG><a name="[3843b0c]"></a>led_control</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3846500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[3846500]"></a>led_init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = led_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2931480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[3843b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_control
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38464c4]"></a>pwm_init</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pwm_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292c944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[292ca34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[292cee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[292d268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[292d2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[292f20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[292f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2931480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[384644c]"></a>tim4_init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tim4_init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292ce6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[292cee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[292d2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[292f20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[29366c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3846488]"></a>tim2_init</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tim2_init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292ce6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[292cee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[292d2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[292f20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[29366c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3843314]"></a>TIM4_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM4_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[292beb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[292bef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[38432d8]"></a>TIM2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM2_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[292beb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[292bef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[384653c]"></a>key_init</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = key_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2931138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[2931480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[2932b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[29366c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3842e28]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2931408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2932a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3842dec]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2931408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2932a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3842db0]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 468 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EXTI1_IRQHandler &rArr; display_second &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[292cee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[2931408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2932a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[38468fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_second
<LI><a href="#[3846938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3842d74]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EXTI2_IRQHandler &rArr; display_second &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChar &rArr; LCD_DrawChar &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[2931408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2932a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[383c4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[38468fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_second
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[38429b4]"></a>SDA_Input_Mode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDA_Input_Mode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2931480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38426e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceiveByte
<LI><a href="#[38427d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
</UL>

<P><STRONG><a name="[3842978]"></a>SDA_Output_Mode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDA_Output_Mode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2931480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38426e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceiveByte
<LI><a href="#[38427d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
</UL>

<P><STRONG><a name="[384293c]"></a>SDA_Output</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDA_Output
</UL>
<BR>[Calls]<UL><LI><a href="#[29312dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2931318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[3842720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
<LI><a href="#[384275c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendNotAck
<LI><a href="#[3842798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendAck
<LI><a href="#[3842810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[384284c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
</UL>

<P><STRONG><a name="[3842900]"></a>SCL_Output</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCL_Output
</UL>
<BR>[Calls]<UL><LI><a href="#[29312dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2931318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[38426e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceiveByte
<LI><a href="#[3842720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
<LI><a href="#[384275c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendNotAck
<LI><a href="#[3842798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendAck
<LI><a href="#[38427d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[3842810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[384284c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
</UL>

<P><STRONG><a name="[38428c4]"></a>SDA_Input</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDA_Input
</UL>
<BR>[Calls]<UL><LI><a href="#[2931408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[38426e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceiveByte
<LI><a href="#[38427d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
</UL>

<P><STRONG><a name="[3842888]"></a>delay1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38426e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceiveByte
<LI><a href="#[3842720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
<LI><a href="#[384275c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendNotAck
<LI><a href="#[3842798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendAck
<LI><a href="#[38427d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[3842810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[384284c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
</UL>

<P><STRONG><a name="[384284c]"></a>I2CStart</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2CStart &rArr; SCL_Output
</UL>
<BR>[Calls]<UL><LI><a href="#[3842888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
<LI><a href="#[3842900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[384293c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[384266c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_write
<LI><a href="#[38426a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_read
</UL>

<P><STRONG><a name="[3842810]"></a>I2CStop</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2CStop &rArr; SCL_Output
</UL>
<BR>[Calls]<UL><LI><a href="#[3842888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
<LI><a href="#[3842900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[384293c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[384266c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_write
<LI><a href="#[38426a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_read
<LI><a href="#[38427d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
</UL>

<P><STRONG><a name="[38427d4]"></a>I2CWaitAck</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2CWaitAck &rArr; SDA_Output_Mode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3842810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[3842888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
<LI><a href="#[38428c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input
<LI><a href="#[3842900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[3842978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output_Mode
<LI><a href="#[38429b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input_Mode
</UL>
<BR>[Called By]<UL><LI><a href="#[384266c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_write
<LI><a href="#[38426a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_read
</UL>

<P><STRONG><a name="[3842798]"></a>I2CSendAck</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3842888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
<LI><a href="#[3842900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[384293c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output
</UL>

<P><STRONG><a name="[384275c]"></a>I2CSendNotAck</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3842888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
<LI><a href="#[3842900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[384293c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output
</UL>

<P><STRONG><a name="[3842720]"></a>I2CSendByte</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2CSendByte &rArr; SCL_Output
</UL>
<BR>[Calls]<UL><LI><a href="#[3842888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
<LI><a href="#[3842900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[384293c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[384266c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_write
<LI><a href="#[38426a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_read
</UL>

<P><STRONG><a name="[38426e4]"></a>I2CReceiveByte</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2CReceiveByte &rArr; SDA_Output_Mode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3842888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1
<LI><a href="#[38428c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input
<LI><a href="#[3842900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_Output
<LI><a href="#[3842978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Output_Mode
<LI><a href="#[38429b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_Input_Mode
</UL>
<BR>[Called By]<UL><LI><a href="#[38426a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_read
</UL>

<P><STRONG><a name="[3846578]"></a>i2c_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292f248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2931480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38426a8]"></a>u8_read</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = u8_read &rArr; I2CReceiveByte &rArr; SDA_Output_Mode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38426e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceiveByte
<LI><a href="#[3842720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
<LI><a href="#[38427d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[3842810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[384284c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
</UL>
<BR>[Called By]<UL><LI><a href="#[3846410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u32_read
</UL>

<P><STRONG><a name="[384266c]"></a>u8_write</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3842720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
<LI><a href="#[38427d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[3842810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[384284c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
</UL>
<BR>[Called By]<UL><LI><a href="#[3842630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u32_write
</UL>

<P><STRONG><a name="[3846410]"></a>u32_read</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = u32_read &rArr; u8_read &rArr; I2CReceiveByte &rArr; SDA_Output_Mode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38426a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_read
<LI><a href="#[3846938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[3846974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3842630]"></a>u32_write</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[384266c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8_write
<LI><a href="#[3846938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[3842234]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38420cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[3842180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[38421f8]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[38421bc]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3842180]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3842234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[38468fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_second
<LI><a href="#[38469ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
</UL>

<P><STRONG><a name="[3842144]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3842108]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[38420cc]"></a>_memset$wrapper</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3842234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[394fe24]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[394fde8]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[383c744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[394f62c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39500f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[3950130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[394f5f0]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[383c564]"></a>__0printf$6</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf6.o(i.__0printf$6), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[383c744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[383c528]"></a>__1printf$6</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0printf$6), UNUSED)

<P><STRONG><a name="[383c4ec]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0printf$6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3842d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
</UL>

<P><STRONG><a name="[383c3fc]"></a>__0sprintf$6</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[383c654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[383c744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[383c3c0]"></a>__1sprintf$6</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)

<P><STRONG><a name="[383c384]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[38468fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_second
<LI><a href="#[38469ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display
</UL>

<P><STRONG><a name="[394edf8]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[394edbc]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[394ed80]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[292d4c0]"></a>TI4_Config</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292d088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[292d484]"></a>TI3_Config</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292d088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[292d448]"></a>TI2_Config</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292ccc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[292d04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[292d088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[292d40c]"></a>TI1_Config</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[292ccc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[292d04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[292d088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[3845204]"></a>SetSysClockTo72</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, system_stm32f10x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38451c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[38451c8]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[3845204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[29390f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[383c744]"></a>_printf_core</STRONG> (Thumb, 764 bytes, Stack size 104 bytes, printf6.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[383c6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[383c708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[394fde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[383c3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
<LI><a href="#[383c564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$6
</UL>

<P><STRONG><a name="[383c708]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printf6.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[383c744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[383c6cc]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf6.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[383c744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[383c654]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf6.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[383c3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf6.o(i.__0sprintf$6)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
